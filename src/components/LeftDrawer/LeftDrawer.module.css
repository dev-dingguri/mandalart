@value mobileAsideWidth: 70vw;

.container {
  visibility: hidden;
  transition: backdrop-filter 200ms ease-out, visibility 200ms ease-out;
}

.container.shown {
  visibility: visible;
  backdrop-filter: var(--filter-backdrop);
}
/*
.aside {
  position: fixed;
  // transform을 사용할 경우 position: fixed가 된 요소는 
  //  transform가 있는 요소에 상대적이 되기 때문에 left 사용
  left: calc(mobileAsideWidth * -1);  
  display: flex;
  flex-direction: column;
  width: mobileAsideWidth;
  height: 100%;
  padding: 0;
  color: var(--color-font-1);
  background-color: var(--color-bg-1);
  transition: left 200ms ease-out;
}

.aside.shown {
  left: 0;
}
*/

.aside {
  width: mobileAsideWidth;
}

@media screen and (min-width: 30rem) {
  /* 30 * 0.7 = 21*/
  @value asideWidth: 21rem;
  .aside {
    /* left: calc(asideWidth * -1); */
    width: asideWidth;
  }
}

.bottom {
  margin: 0 var(--size-scrollbar-width);
  padding: 0.5em 0;
  border-top: 1px solid var(--color-border-1);
}

.newButton {
  display: flex;
  align-items: center;
  width: 100%;
  height: 2em;
  padding: 0 0.5em;
  border-radius: 5px;
  background-color: transparent;
  color: var(--color-font-2);
}

.newButton p {
  margin: 0;
  margin-left: 0.5em;
}
