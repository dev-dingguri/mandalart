@value bgColor1 from '../../common/style.css';
@value bgColor3 from '../../common/style.css';
@value borderColor1 from '../../common/style.css';
@value fontColor1 from '../../common/style.css';
@value fontColor2 from '../../common/style.css';
@value buttonHoverEffectColor from '../../common/style.css';
@value buttonActiveEffectColor from '../../common/style.css';
@value backdropFilter from '../../common/style.css';

@value mobileAsideWidth: 70%;

.container {
  visibility: hidden;
  transition: backdrop-filter 200ms ease-out, visibility 200ms ease-out;
}

.container.show {
  visibility: visible;
  backdrop-filter: backdropFilter;
}

.aside {
  position: fixed;
  left: calc(mobileAsideWidth * -1);
  right: 0;
  display: flex;
  flex-direction: column;
  width: mobileAsideWidth;
  height: 100%;
  color: fontColor1;
  background-color: bgColor1;
  transition: transform 200ms ease-out;
}

.aside.show {
  transform: translateX(100%);
}

@media screen and (min-width: 30rem) {
  /* 30 * 0.7 = 21*/
  @value asideWidth: 21rem;
  .aside {
    left: calc(asideWidth * -1);
    width: asideWidth;
  }
}

.header {
  display: flex;
  align-items: center;
  width: 100%;
  min-height: 3em;
  padding: 0 1em;
}

.title {
  font-size: 1.3rem;
  line-height: 1em;
  font-weight: bold;
  margin: 0;
}

.closeButton {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 1.5em;
  height: 1.5em;
  border-radius: 5px;
  padding: 0;
  background-color: transparent;
  color: fontColor1;
  margin-left: auto;
}

.newButton {
  display: flex;
  justify-items: center;
  align-items: center;
  height: 2em;
  line-height: 2em;
  padding: 0 0.5em;
  margin: 0.25em 0.5em;
  border-radius: 5px;
  background-color: transparent;
  color: fontColor2;
}

.newButton p {
  margin: 0;
  margin-left: 0.5em;
}
